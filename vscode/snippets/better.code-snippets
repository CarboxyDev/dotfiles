{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Divider Line": {
    "scope": "",
    "prefix": ["//%"],
    "body": [
      "// % -------------------------------------------------------------------------------------"
    ],
    "description": "Divider Line"
  },
  "React component": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": ["rc", "rfc"],
    "body": [
      "export const $1 = () => {",
      "  return (",
      "    <div></div>",
      "  );",
      "};",
      "",
    ],
    "description": "Creates a basic react component"
  },
  "React component with props": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": ["rcp", "rfcp"],
    "body": [
      "interface $1Props {",
      "  $2",
      "}",
      "",
      "export const $1 = (props: $1Props) => {",
      "  return (",
      "    <div></div>",
      "  );",
      "};",
      "",
    ],
    "description": "Creates a react component with props"
  },
  "React hook": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": ["rh", "hook"],
    "body": [
      "export function $1() {",
      "  return null;",
      "};",
      "",
    ],
    "description": "Creates a react hook"
  },

  
}
